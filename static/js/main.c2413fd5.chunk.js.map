{"version":3,"sources":["Header/Header.jsx","Home/Home.jsx","About/About.jsx","Projects/Projects.jsx","Contact/Contact.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Header","className","activeClass","to","spy","smooth","duration","style","display","alignItems","src","alt","App","id","fontSize","marginBottom","lineHeight","marginTop","marginRight","width","height","About","moment","toNow","Projects","useState","photoIndex","setPhotoIndex","open","setOpen","screenshots","setScreenshots","projects","map","project","key","beginDate","name","onClick","shortDescription","mainSrc","nextSrc","length","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","target","rel","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0nFA6DeA,G,MAzDA,WACb,OACE,yBAAKC,UAAU,UACb,kBAAC,OAAD,CACEC,YAAY,SACZC,GAAG,OACHC,KAAK,EACLC,QAAQ,EACRC,SAAU,IACVC,MAAO,CAAEC,QAAS,OAAQC,WAAY,WAEtC,0BAAMR,UAAU,iBACd,yBAAKS,IAAI,mBAAmBT,UAAU,QAAQU,IAAI,UAClD,0BAAMV,UAAU,sBAAhB,iBAGJ,yBAAKA,UAAU,SACb,wBAAIA,UAAU,eACZ,wBAAIA,UAAU,YACZ,kBAAC,OAAD,CACEC,YAAY,SACZC,GAAG,QACHC,KAAK,EACLC,QAAQ,EACRC,SAAU,KALZ,UAUF,wBAAIL,UAAU,YACZ,kBAAC,OAAD,CACEC,YAAY,SACZC,GAAG,WACHC,KAAK,EACLC,QAAQ,EACRC,SAAU,KALZ,aAUF,wBAAIL,UAAU,YACZ,kBAAC,OAAD,CACEC,YAAY,SACZC,GAAG,UACHC,KAAK,EACLC,QAAQ,EACRC,SAAU,KALZ,iBCaGM,G,MAtDH,WACV,OACE,yBAAKX,UAAU,UAAUY,GAAG,QAC1B,yBAAKZ,UAAU,sBACb,yBAAKA,UAAU,gBACb,0BAAMM,MAAO,CAAEO,SAAU,GAAIC,aAAc,QAA3C,oCAGA,0BAAMR,MAAO,CAAEO,SAAU,GAAIE,WAAY,SAAzC,mJAMA,yBAAKT,MAAO,CAAEU,UAAW,UACvB,kBAAC,OAAD,CACEd,GAAG,QACHC,KAAK,EACLC,QAAQ,EACRC,SAAU,IACVC,MAAO,CAAEW,YAAa,QAEtB,0BAAML,GAAG,gBAAT,UAEF,kBAAC,OAAD,CAAMV,GAAG,UAAUC,KAAK,EAAMC,QAAQ,EAAMC,SAAU,KACpD,0BAAMO,GAAG,gBAAT,cAIN,yBAAKZ,UAAU,WACb,yBAAKY,GAAG,0BACN,yBAAKH,IAAI,oBAAoBT,UAAU,SAASU,IAAI,WACpD,yBAAKE,GAAG,eACN,yBAAKZ,UAAU,yBAEjB,yBAAKY,GAAG,gBACN,yBAAKZ,UAAU,0BAEjB,yBAAKY,GAAG,eACN,yBAAKZ,UAAU,wBACf,yBACES,IAAI,uBACJT,UAAU,sBACVU,IAAI,YACJJ,MAAO,CAAEY,MAAO,QAASC,OAAQ,iB,iBCjBlCC,G,MA3BD,WACZ,OACE,yBAAKR,GAAG,SACN,yBAAKZ,UAAU,gBACb,6BACE,yBAAKS,IAAI,uBAAuBC,IAAI,gBAGxC,yBAAKV,UAAU,iBACb,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,YACb,kDACA,uBAAGA,UAAU,iBAAb,6BAC6BqB,IAAO,cAAcC,OAAM,GADxD,qSASF,yBAAKtB,UAAU,qB,gDC0CRuB,EA7DE,WAAO,IAAD,EACeC,mBAAS,GADxB,mBACdC,EADc,KACFC,EADE,OAEGF,oBAAS,GAFZ,mBAEdG,EAFc,KAERC,EAFQ,OAGiBJ,mBAAS,IAH1B,mBAGdK,EAHc,KAGDC,EAHC,KAKrB,OACE,yBAAKlB,GAAG,YACN,wBAAIZ,UAAU,kBAAd,wBACA,yBAAKA,UAAU,oBACZ+B,EAASC,KAAI,SAAAC,GACZ,OACE,yBAAKjC,UAAU,UAAUkC,IAAKD,EAAQrB,IACpC,0BAAMZ,UAAU,QAAQiC,EAAQE,WAChC,4BAAKF,EAAQG,MACb,yBACE3B,IAAKwB,EAAQJ,YAAY,GACzBnB,IAAI,KACJV,UAAU,qBACVqC,QAAS,WACPP,EAAeG,EAAQJ,aACvBD,GAAQ,MAGZ,2BAAIK,EAAQK,kBACZ,0BACEtC,UAAU,mBACVqC,QAAS,WACPP,EAAeG,EAAQJ,aACvBD,GAAQ,KAJZ,yBAaPD,GACC,kBAAC,IAAD,CACEY,QAASV,EAAYJ,GACrBe,QAASX,GAAaJ,EAAa,GAAKI,EAAYY,QACpDC,QACEb,GACGJ,EAAaI,EAAYY,OAAS,GAAKZ,EAAYY,QAGxDE,eAAgB,kBAAMf,GAAQ,IAC9BgB,kBAAmB,kBACjBlB,GACGD,EAAaI,EAAYY,OAAS,GAAKZ,EAAYY,SAGxDI,kBAAmB,kBACjBnB,GAAeD,EAAa,GAAKI,EAAYY,a,mDCjB1CrB,G,MApCD,WACZ,OACE,yBAAKR,GAAG,WACN,yBAAKZ,UAAU,gBACb,uBACEA,UAAU,YACV8C,OAAO,SACPC,IAAI,sBACJC,KAAK,sDAEL,kBAAC,IAAD,CAAUhD,UAAU,SACpB,2CAEF,uBACEA,UAAU,YACV8C,OAAO,SACPC,IAAI,sBACJC,KAAK,6BAEL,kBAAC,IAAD,CAAQhD,UAAU,SAClB,yCAEF,uBACEA,UAAU,YACV8C,OAAO,SACPC,IAAI,sBACJC,KAAK,+CAEL,kBAAC,IAAD,CAAIhD,UAAU,SACd,4CChBKW,EAZH,WACV,OACE,yBAAKC,GAAG,QACN,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCFcqC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c2413fd5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-scroll\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"header\">\r\n      <Link\r\n        activeClass=\"active\"\r\n        to=\"home\"\r\n        spy={true}\r\n        smooth={true}\r\n        duration={500}\r\n        style={{ display: \"flex\", alignItems: \"center\" }}\r\n      >\r\n        <span className=\"nav-item-home\">\r\n          <img src=\"images/earth.png\" className=\"earth\" alt=\"earth\" />\r\n          <span className=\"nav-item-home-text\">Jurian Vink</span>\r\n        </span>\r\n      </Link>\r\n      <div className=\"right\">\r\n        <ul className=\"nav-wrapper\">\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              activeClass=\"active\"\r\n              to=\"about\"\r\n              spy={true}\r\n              smooth={true}\r\n              duration={1000}\r\n            >\r\n              About\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              activeClass=\"active\"\r\n              to=\"projects\"\r\n              spy={true}\r\n              smooth={true}\r\n              duration={1000}\r\n            >\r\n              Projects\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              activeClass=\"active\"\r\n              to=\"contact\"\r\n              spy={true}\r\n              smooth={true}\r\n              duration={1000}\r\n            >\r\n              Contact\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-scroll\";\r\nimport \"./Home.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"wrapper\" id=\"home\">\r\n      <div className=\"front-page-wrapper\">\r\n        <div className=\"introduction\">\r\n          <span style={{ fontSize: 24, marginBottom: \"1em\" }}>\r\n            Welcome! My name is Jurian Vink,\r\n          </span>\r\n          <span style={{ fontSize: 18, lineHeight: \"30px\" }}>\r\n            I am a passionate React developer with a sense of design and a\r\n            passion for making valuable, (re)usable and beautiful software using\r\n            clean code!\r\n          </span>\r\n\r\n          <div style={{ marginTop: \"2.5em\" }}>\r\n            <Link\r\n              to=\"about\"\r\n              spy={true}\r\n              smooth={true}\r\n              duration={1000}\r\n              style={{ marginRight: \"2em\" }}\r\n            >\r\n              <span id=\"button-style\">ABOUT</span>\r\n            </Link>\r\n            <Link to=\"contact\" spy={true} smooth={true} duration={1000}>\r\n              <span id=\"button-style\">CONTACT</span>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"content\">\r\n          <div id=\"circle-orbit-container\">\r\n            <img src=\"images/planet.png\" className=\"planet\" alt=\"planet\" />\r\n            <div id=\"outer-orbit\">\r\n              <div className=\"outer-orbit-cirlces\"></div>\r\n            </div>\r\n            <div id=\"middle-orbit\">\r\n              <div className=\"middle-orbit-cirlces\"></div>\r\n            </div>\r\n            <div id=\"inner-orbit\">\r\n              <div className=\"inner-orbit-cirlces\"></div>\r\n              <img\r\n                src=\"images/spaceship.png\"\r\n                className=\"inner-orbit-cirlces\"\r\n                alt=\"satellite\"\r\n                style={{ width: \"1.5em\", height: \"auto\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport \"./About.css\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div id=\"about\">\r\n      <div className=\"content-left\">\r\n        <div>\r\n          <img src=\"images/dordrecht.png\" alt=\"Dordrecht\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"content-right\">\r\n        <div className=\"outer-column\" />\r\n        <div className=\"about-me\">\r\n          <h5>Something about me</h5>\r\n          <p className=\"about-me-text\">\r\n            My name is Jurian Vink, a {moment(\"1998-09-28\").toNow(true)} year\r\n            old student, living in my beautiful home town Dordrecht, the\r\n            Netherlands. React enthousiast, but actually anything with\r\n            Javascript. I like gaming, hanging out with friends, fitness, you\r\n            name it. Currently in my third year of part-time study Computer\r\n            Science at Hogeschool Rotterdam.\r\n          </p>\r\n        </div>\r\n        <div className=\"outer-column\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useState } from \"react\";\r\nimport \"./Projects.css\";\r\nimport Lightbox from \"lightbox-react\";\r\nimport \"lightbox-react/style.css\";\r\nimport projects from \"../projects.json\";\r\n\r\nconst Projects = () => {\r\n  const [photoIndex, setPhotoIndex] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n  const [screenshots, setScreenshots] = useState([]);\r\n\r\n  return (\r\n    <div id=\"projects\">\r\n      <h4 className=\"projects-title\">Projects I worked on</h4>\r\n      <div className=\"projects-wrapper\">\r\n        {projects.map(project => {\r\n          return (\r\n            <div className=\"project\" key={project.id}>\r\n              <span className=\"date\">{project.beginDate}</span>\r\n              <h3>{project.name}</h3>\r\n              <img\r\n                src={project.screenshots[0]}\r\n                alt=\"sc\"\r\n                className=\"project-screenshot\"\r\n                onClick={() => {\r\n                  setScreenshots(project.screenshots);\r\n                  setOpen(true);\r\n                }}\r\n              />\r\n              <p>{project.shortDescription}</p>\r\n              <span\r\n                className=\"show-screenshots\"\r\n                onClick={() => {\r\n                  setScreenshots(project.screenshots);\r\n                  setOpen(true);\r\n                }}\r\n              >\r\n                Show screenshots\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {open && (\r\n        <Lightbox\r\n          mainSrc={screenshots[photoIndex]}\r\n          nextSrc={screenshots[(photoIndex + 1) % screenshots.length]}\r\n          prevSrc={\r\n            screenshots[\r\n              (photoIndex + screenshots.length - 1) % screenshots.length\r\n            ]\r\n          }\r\n          onCloseRequest={() => setOpen(false)}\r\n          onMovePrevRequest={() =>\r\n            setPhotoIndex(\r\n              (photoIndex + screenshots.length - 1) % screenshots.length\r\n            )\r\n          }\r\n          onMoveNextRequest={() =>\r\n            setPhotoIndex((photoIndex + 1) % screenshots.length)\r\n          }\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\nimport LinkedIn from \"mdi-react/LinkedinBoxIcon\";\r\nimport GitHub from \"mdi-react/GithubCircleIcon\";\r\nimport At from \"mdi-react/AtIcon\";\r\nimport \"./Contact.css\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div id=\"contact\">\r\n      <div className=\"social-media\">\r\n        <a\r\n          className=\"icon-text\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"https://www.linkedin.com/in/jurian-vink-282465141/\"\r\n        >\r\n          <LinkedIn className=\"icon\" />\r\n          <span>LinkedIn</span>\r\n        </a>\r\n        <a\r\n          className=\"icon-text\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"https://github.com/jvink/\"\r\n        >\r\n          <GitHub className=\"icon\" />\r\n          <span>Github</span>\r\n        </a>\r\n        <a\r\n          className=\"icon-text\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"mailto:jurian.vnk@gmail.com?Subject=Contact\"\r\n        >\r\n          <At className=\"icon\" />\r\n          <span>Email</span>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport Header from \"./Header/Header.jsx\";\r\nimport Home from \"./Home/Home.jsx\";\r\nimport About from \"./About/About.jsx\";\r\nimport Projects from \"./Projects/Projects.jsx\";\r\nimport Contact from \"./Contact/Contact.jsx\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div id=\"root\">\r\n      <Header />\r\n      <Home />\r\n      <About />\r\n      <Projects />\r\n      <Contact />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}